{% import "_includes/forms" as forms %}

{% set fieldRuleOptions = fieldRule.getRuleTargets() %}
{% set formFieldsAsOptions = fieldRule.getFormFieldsAsOptions(true) %}

{% set cols = [
    {
        type: 'select',
        options: formFieldsAsOptions
    },
    {
        type: 'selectCondition',
        options: []
    },
    {
        type: 'textual'
    }
] %}

{% for conditionSet in fieldRule.conditions %}
    {% set conditionSetIndex = loop.index0 %}
    <table id="sproutforms-rules-{{ conditionSetIndex }}" class="fullwidth rules-table">
        <thead>
        <tr>
            <th>{{ "Field"|t('sprout-forms') }}</th>
            <th>{{ "Condition"|t('sprout-forms') }}</th>
            <th>{{ "Value"|t('sprout-forms') }}</th>
            <th class="thin"></th>
            <th class="thin"></th>
        </tr>
        </thead>
        <tbody>

        {% set formFieldHandle = "" %}
        {% set conditionClass = "" %}

        {% if conditionSet|length %}
            {% for condition in conditionSet %}
                {% set conditionIndex = loop.index0 %}
                {% set formField = craft.sproutForms.getFormField(formFieldHandle, fieldRule.formId) %}

                {# Does the field our rule is for still exist in the layout? #}
                {% if formField is not null %}
                    <tr data-id="{{ conditionIndex }}">
                        {% for col in condition %}
                            <td>
                                {% set colName = 'conditions[conditionSet-' ~ conditionSetIndex ~ '][condition-' ~ conditionIndex ~ '][' ~ loop.index0 ~ ']' %}

                                {# Field Dropdown #}
                                {% if loop.index0 == 0 %}
                                    {% set formFieldHandle = col %}
                                    {% if formFieldHandle is empty %}
                                        {% set formFieldHandle = formFieldsAsOptions[0].value %}
                                    {% endif %}
                                    {{ forms.select({
                                        name: colName,
                                        hasOptgroups: true,
                                        options: formFieldsAsOptions,
                                        value: col
                                    }) }}

                                    {# Condition Dropdown #}
                                {% elseif loop.index0 == 1 %}

                                    {% set conditionsAsOptions = formField.getConditionsAsOptions() %}
                                    {{ forms.select({
                                        name: colName,
                                        hasOptgroups: true,
                                        options: conditionsAsOptions,
                                        value: col
                                    }) }}
                                    {% set conditionClass = col != '' ? col : conditionsAsOptions[0].value %}

                                    {# Condition Value #}
                                {% else %}
                                    {% set fieldCondition = craft.sproutForms.getFieldCondition(conditionClass, formField) %}
                                    {{ formField.getConditionValueInputHtml(fieldCondition, colName, col)|raw }}
                                {% endif %}
                            </td>
                        {% endfor %}

                        <td class="thin action">
                            <div class="buttons">
                                <div id="add-rule{{ conditionSetIndex }}" class="btn add icon small" tabindex="0">OR</div>
                            </div>
                        </td>
                        <td class="thin action">
                            <a class="delete icon" title="{{ "Delete"|t('sprout-forms') }}"></a>
                        </td>
                    </tr>
                {% endif %}
            {% endfor %}
        {% endif %}
        </tbody>
    </table>
    {% if not loop.last %}
        <div class="rules-table-and">{{ "AND"|t('sprout-forms') }}</div>
    {% endif %}
{% endfor %}

<div class="buttons" id="and-add-wrapper">
    <div id="add-and-rules" class="btn add icon small rules-table-and-add" tabindex="0">AND</div>
</div>

<script>

  (function() {
    let addTableButton = $("#settings-barrelstrength-sproutforms-rules-FieldRule-add-and-rules");
    let rules = {{ fieldRule.conditions|json_encode|raw }};
    let namespace = "settings[{{ className(fieldRule)|e('js') }}]";

    if (rules == null) {
      addTableButton.trigger('click');
    }

    addTableButton.on('click', function() {
      addTable();
    });

    let columns = {{ cols|json_encode|raw }};
    let fieldRuleOptions = {{ fieldRuleOptions|json_encode|raw }};
    let settings = {};

    function getAndTablesCount() {
      return $(".rules-table").length;
    }

    function addTable() {
      let tables = $(".rules-table");
      let currentIndex = tables.length ? tables.length : 0;
      let nextIndex = currentIndex + 1;
      let tableId = 'sprouts-rules-' + nextIndex;
      let baseName = namespace + '[conditions][conditionSet-' + nextIndex + ']';
      let andDiv = '<div class="rules-table-and">AND</div>';

      if (getAndTablesCount() === 0) {
        andDiv = '';
      }

      $("#settings-barrelstrength-sproutforms-rules-FieldRule-and-add-wrapper").before(andDiv + '<table id="' + tableId + '" class="rules-table fullwidth">' +
        '<thead><tr>' +
        '<th>{{ "Field"|t('sprout-forms') }}</th>' +
        '<th>{{ "Condition"|t('sprout-forms') }}</th>' +
        '<th>{{ "Value"|t('sprout-forms') }}</th>' +
        '<th class="thin"></th>' +
        '<th class="thin"></th>' +
        '<tbody>' +
        '</tbody>' +
        '</table>');

      new Craft.SproutForms.EditableTable(tableId, baseName, columns, settings, fieldRuleOptions);

      $('#add-rule' + nextIndex).trigger('click');
    }

    $('.rules-table').each(function(index) {
      let tableId = this.id;
      let baseName = namespace + '[conditions][conditionSet-' + index + ']';
      new Craft.SproutForms.EditableTable(tableId, baseName, columns, settings, fieldRuleOptions);
    });

    if (getAndTablesCount() === 0) {
      addTable();
    }
  })();

</script>

