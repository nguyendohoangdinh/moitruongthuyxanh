{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/web/assets/formtemplates/src/js/accessibility.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SproutFormsCheckableInputs","formId","this","form","document","getElementById","checkableInputs","querySelectorAll","setAriaCheckedAttributes","addCheckableInputsEventListeners","requiredCheckboxFields","setRequiredCheckboxFieldEventListeners","length","checked","setAttribute","self","addEventListener","event","onCheckableInputChange","target","getAttribute","resetRadioGroup","selectedRadioInput","radioInputName","allRadioInputs","checkboxInputs","isSomethingChecked","updateRequiredCheckboxInputAttributes","checkboxInput","removeAttribute","window"],"mappings":"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","file":"/src/web/assets/formtemplates/dist/js/accessibility.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","/*\n * @link https://sprout.barrelstrengthdesign.com\n * @copyright Copyright (c) Barrel Strength Design LLC\n * @license https://craftcms.github.io/license\n */\n\n// Manage aria-checked values on Checkbox and Radio Button inputs\nclass SproutFormsCheckableInputs {\n\n  constructor(formId) {\n    this.formId = formId;\n    this.form = document.getElementById(this.formId);\n\n    this.checkableInputs = this.form.querySelectorAll('[type=checkbox], [type=radio]');\n    this.setAriaCheckedAttributes();\n    this.addCheckableInputsEventListeners();\n\n    this.requiredCheckboxFields = document.querySelectorAll('.checkboxes.required');\n    this.setRequiredCheckboxFieldEventListeners();\n  }\n\n  setAriaCheckedAttributes() {\n    for (let i = 0; i < this.checkableInputs.length; i += 1) {\n      if (this.checkableInputs[i].checked) {\n        this.checkableInputs[i].setAttribute('aria-checked', 'true');\n      }\n    }\n  }\n\n  addCheckableInputsEventListeners() {\n    let self = this;\n    for (let i = 0; i < this.checkableInputs.length; i += 1) {\n      this.checkableInputs[i].addEventListener('click', function(event) {\n        self.onCheckableInputChange(event);\n      }.bind(this), false);\n    }\n  }\n\n  onCheckableInputChange(event) {\n    let self = this;\n    if (event.target.checked) {\n      // Resets all buttons in radio group to false\n      if (event.target.getAttribute('type') === 'radio') {\n        self.resetRadioGroup(event.target);\n      }\n\n      event.target.setAttribute('aria-checked', 'true');\n    } else {\n      event.target.setAttribute('aria-checked', 'false');\n    }\n  }\n\n  resetRadioGroup(selectedRadioInput) {\n    let radioInputName = selectedRadioInput.getAttribute('name');\n    let allRadioInputs = document.querySelectorAll('#' + this.formId + ' [name=\"' + radioInputName + '\"] ');\n\n    for (let i = 0; i < allRadioInputs.length; i += 1) {\n      allRadioInputs[i].setAttribute('aria-checked', 'false');\n    }\n  }\n\n  setRequiredCheckboxFieldEventListeners() {\n    let self = this;\n    for (const checkboxField of this.requiredCheckboxFields) {\n      // Get all checkbox inputs for a given required Checkboxes field\n      let checkboxInputs = checkboxField.querySelectorAll('input[type=\"checkbox\"]');\n      for (const checkboxInput of checkboxInputs) {\n        checkboxInput.addEventListener('change', function() {\n          let isSomethingChecked = self.isSomethingChecked(checkboxInputs);\n          self.updateRequiredCheckboxInputAttributes(checkboxInputs, isSomethingChecked);\n        }.bind(this), false);\n      }\n    }\n  }\n\n  /**\n   * If a single checkbox is checked, a checkbox field satisfies the 'required' criteria\n   *\n   * @param checkboxInputs\n   * @returns {boolean}\n   */\n  isSomethingChecked(checkboxInputs) {\n    for (let i = 0; i < checkboxInputs.length; i++) {\n      if (checkboxInputs[i].checked) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * If a single checkbox is selected, remove all required attributes.\n   * If no checkboxes are checked, set all checkbox inputs to required\n   *\n   * @param checkboxInputs\n   * @param isSomethingChecked\n   */\n  updateRequiredCheckboxInputAttributes(checkboxInputs, isSomethingChecked) {\n    for (const checkboxInput of checkboxInputs) {\n      if (isSomethingChecked) {\n        checkboxInput.removeAttribute('required');\n        checkboxInput.removeAttribute('aria-required');\n      } else {\n        checkboxInput.setAttribute('required', 'true');\n        checkboxInput.setAttribute('aria-required', 'true');\n      }\n    }\n  }\n}\n\nwindow.SproutFormsCheckableInputs = SproutFormsCheckableInputs;"],"sourceRoot":""}